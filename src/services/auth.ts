import { api } from 'boot/axios'
import { Notify } from 'quasar'
import type { Auth } from 'src/types/auth'

// üìå Utility ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
const showError = (message: string) => {
  Notify.create({
    message,
    type: 'negative',
    position: 'bottom',
    timeout: 3000,
  })
}

class AuthService {
  static async login(email: string, password: string) {
    try {
      const res = await api.post<Auth>('/auth/login', { email, password })
      return res.data
    } catch (error) {
      showError('‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô')
      console.error('Login failed:', error)
    }
  }

  static async logout(userId: number): Promise<void> {
    try {
      await api.post(`/auth/logout/${userId}`)
      localStorage.removeItem('userPayload')
      window.location.href = '/login'
    } catch (error) {
      showError('‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß')
      console.error('Logout failed:', error)
    }
  }

  static async fetchProfile(): Promise<Auth | null> {
    try {
      const { data } = await api.get<Auth>('/auth/profile')
      return data || null
    } catch (err) {
      showError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ')
      console.error('Fetch profile failed:', err)
      return null
    }
  }
}

export default AuthService
