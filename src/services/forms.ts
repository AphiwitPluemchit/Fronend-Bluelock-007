import { api } from 'boot/axios'
import { Notify } from 'quasar'
import type { Form } from 'src/types/form'

// üîî ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error
const showError = (message: string) => {
  Notify.create({
    message,
    type: 'negative',
    position: 'bottom',
    timeout: 3000,
  })
}

export class FormService {
  static path = '/forms' // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö backend ‡πÄ‡∏ä‡πà‡∏ô /forms ‡∏´‡∏£‡∏∑‡∏≠ /api/forms ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà backend set

  /** ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÉ‡∏´‡∏°‡πà */
  static async createForm(form: Form): Promise<Form | null> {
    try {
      const res = await api.post<Form>(this.path, form)
      return res.data
    } catch (error) {
      showError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏î‡πâ')
      console.error('CreateForm error:', error)
      return null
    }
  }

  /** ‡∏î‡∏∂‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */
  static async getForms(): Promise<Form[]> {
    try {
      const res = await api.get<Form[]>(this.path)
      return res.data
    } catch (error) {
      showError('‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
      console.error('GetForms error:', error)
      return []
    }
  }

  /** ‡∏î‡∏∂‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ï‡∏≤‡∏° ID */
  static async getFormById(id: string): Promise<Form | null> {
    try {
      const res = await api.get<Form>(`${this.path}/${id}`)
      return res.data
    } catch (error) {
      showError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£')
      console.error('GetFormById error:', error)
      return null
    }
  }

  /** ‡∏•‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° */
  static async deleteForm(id: string): Promise<boolean> {
    try {
      await api.delete(`${this.path}/${id}`)
      return true
    } catch (error) {
      showError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏î‡πâ')
      console.error('DeleteForm error:', error)
      return false
    }
  }

  /** ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏≠‡∏£‡πå‡∏° */
  static async updateForm(id: string, update: Partial<Form>): Promise<Form | null> {
    try {
      const res = await api.put<Form>(`${this.path}/${id}`, update)
      return res.data
    } catch (error) {
      showError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏î‡πâ')
      console.error('UpdateForm error:', error)
      return null
    }
  }
}